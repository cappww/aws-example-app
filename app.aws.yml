AWSTemplateFormatVersion: 2010-09-09

Resources:
  # EC2 Web Server Stack
  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Opens ports for the web api server.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3005
          CidrIp: 0.0.0.0/0
  EC2LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: ami-0e92f5873da29c633
        InstanceType: t2.nano
        KeyName: app-key
        SecurityGroups:
          - !Ref EC2SecurityGroup
  ElasticLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      AvailabilityZones:
        - us-west-1a
        - us-west-1c
      Listeners:
        - Protocol: HTTP
          InstancePort: 80
          LoadBalancerPort: 80
        - Protocol: HTTPS
          InstancePort: 443
          LoadBalancerPort: 443
          SSLCertificateId: arn:aws:acm:us-west-1:364031193056:certificate/ff4210ca-7625-44f3-a4e6-72d8c5b09d36
  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: AppAutoScaleGroup
      DesiredCapacity: 2
      MinSize: 2
      MaxSize: 3
      AvailabilityZones:
        - us-west-1a
        - us-west-1c
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: 1
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer

  # Postgresql Cluster Stack
  DBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Opens the default Postgres port.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
  DBCluster:
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: Delete
    Properties:
      Engine: aurora-postgresql
      MasterUsername: postgres
      MasterUserPassword: not_a_good_password_dont_use_this
      AvailabilityZones:
        - us-west-1a
        - us-west-1c
      VpcSecurityGroupIds:
        - Fn::GetAtt: [DBSecurityGroup, GroupId]
  DBInstance1:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AvailabilityZone: us-west-1a
      DBClusterIdentifier:
        Ref: DBCluster
      DBInstanceClass: db.r5.large
      Engine: aurora-postgresql
      PubliclyAccessible: "true"
  DBInstance2:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AvailabilityZone: us-west-1c
      DBClusterIdentifier:
        Ref: DBCluster
      DBInstanceClass: db.r5.large
      Engine: aurora-postgresql
      PubliclyAccessible: "true"
